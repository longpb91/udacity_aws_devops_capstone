version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0

jobs:
  test_lint:
    docker:
      - image: python:3.7.3-stretch
    
    steps:
      - checkout
      - restore_cache:
          name: Load dependencies
          keys:
            # Find a cache corresponding to this specific package-lock.json checksum
            # when this file is changed, this key will fail
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # Find the most recently generated cache used from any branch
            - v1-dependencies-
      - run:
          name: Install Dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          name: Save dependencies
          paths: 
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Run lint
          command: |
            . venv/bin/activate
            make lint

  # build-image:
  #   working_directory: /app
  #   docker:
  #     - image: docker:17.05.0-ce-git
    
  #   steps:
  #     - checkout
  #     - setup_remote_docker
  #     - run:
  #         name: Buil an Docker Image
  #         command: |
  #           docker build -t longpb/capstone_aws_devops_pj .
  #           echo "--- List of images ---"
  #           docker image ls
  #           echo "----------------------"
  #     - run:
  #         name: Push to DockerHub
  #         command: |
  #           docker login -u="$DOCKERHUB_USERNAME" -p="$DOCKERHUB_PASSWORD"
  #           docker push longpb/capstone_aws_devops_pj
  
  # deploy-kubernetes:
  #   executor: aws-cli/default
  #   docker:
  #     - image: python:3.7.3-stretch
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprints:
  #           - ""
  #     - run:
  #         name: Deploy kubernetes on EC2 instance
  #         command: |
  #           pwd
  #           echo "$EC2_KEYPAIR" >> capstone-keypair.pem
  #           ls -l
  #           chmod 400 capstone-keypair.pem
  #           apt update
  #           apt install expect -y
  #           chmod +x deploy_k8s.sh
  #           ./deploy_k8s.sh

workflows:
  default:
    jobs:
      - test_lint
      # - build-image:
      #     requires:
      #       - test_lint
      # - deploy-kubernetes:
      #     requires:
      #       - build-image

